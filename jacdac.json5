{
  id: 'sc_micropy_jacdac',
  name: 'jacdac',
  initcode: [
    "from jacdac import *",
    "jac = Jacdac()",
    "jac.callback = lambda *args: print('$evt', *args)"
  ],
  blocks: [
    {
      opcode: 'refresh',
      blockType: 'command',
      text: '$$stemcft_jd_refresh',
      pycode: "print('$menu_JD_DEV=', jac.list())",
      // TODO: online mode only
    },
    {
      opcode: 'probe',
      blockType: 'command',
      text: '$$stemcft_jd_probe',
      arguments: {
        DEVID: {
          type: 'string',
          menu: 'JD_DEV'
        },
      },
      pycode: "jac.probe('[DEVID]')"
    },
    "## $$stemcft_jd_button",
    {
      opcode: 'onbtndown',
      blockType: 'hat',
      text: '$$stemcft_jd_onbuttondown',
      isEdgeActivated: false,
      arguments: {
        DEVID: {
          type: 'string',
          menu: 'JD_DEV'
        },
      },
      event: "button_down",
      pycode: "# TODO: on button down"
    },
    {
      opcode: 'onbtndownup',
      blockType: 'hat',
      text: '$$stemcft_jd_onbuttonup',
      isEdgeActivated: false,
      arguments: {
        DEVID: {
          type: 'string',
          menu: 'JD_DEV'
        },
        MS: {
          type: 'argument_reporter_string_number',
          defaultValue: "MS"
        }
      },
      event: "button_up",
      pycode: "# TODO: on button up"
    },
    "## $$stemcft_jd_soundlvl",
    {
      opcode: 'soundlvl_en',
      blockType: 'command',
      text: '$$stemcft_jd_soundlvl_en',
      arguments: {
        DEVID: {
          type: 'string',
          menu: 'JD_DEV'
        },
        ONOFF: {
          type: 'string',
          menu: 'onoff',
          defaultValue: '1'
        }
      },
      pycode: "jac.writeReg('[DEVID]', 'soundLevel', 'enabled', [ONOFF])"
    },
    {
      opcode: 'soundlvl_read',
      blockType: 'reporter',
      text: '$$stemcft_jd_soundlvl_read',
      arguments: {
        DEVID: {
          type: 'string',
          menu: 'JD_DEV'
        }
      },
      pycode: "jac.readReg('[DEVID]', 'soundLevel', 'sound_level')"
    },
    "## Buzzer",
    {
      opcode: 'buzzer_event',
      blockType: 'command',
      text: '$$stemcft_jd_buzzer_event',
      arguments: {
        DEVID: {
          type: 'string',
          menu: 'JD_DEV'
        },
        DUTY: {
          type: 'number',
          defaultValue: 2800
        },
        MS: {
          type: 'number',
          defaultValue: 500
        }
      },
      pycode: "jac.sendEvent('[DEVID]','buzzer','playtone',([DUTY],int([DUTY]/2),[MS]))"
    },
  ],
  menus: {
    JD_DEV: ["Empty"],
    onoff: [
      { text: 'ON', value: '1' },
      { text: 'OFF', value: '0' }
    ],

  }
}